cmake_minimum_required(VERSION 3.0)

project(MeshGeodesyApp)

find_package(FLTK REQUIRED)
find_package(OpenGL REQUIRED)
find_library(XFT_LIBRARY NAMES Xft)
find_library(FONTCONFIG_LIBRARY NAMES fontconfig)
find_library(XRENDER_LIBRARY NAMES Xrender)
find_library(XFIXES_LIBRARY NAMES Xfixes)
find_library(XCURSOR_LIBRARY NAMES Xcursor)
find_library(XINERAMA_LIBRARY NAMES Xinerama)

set(MESHGEODESYAPP_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/source")
set(MESHGEODESYAPP_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/include")

set(MESHGEODESYAPP_SOURCES
    ${MESHGEODESYAPP_SOURCE_DIR}/MxGUI.cpp
    ${MESHGEODESYAPP_SOURCE_DIR}/MeshGUI.cpp
    ${MESHGEODESYAPP_SOURCE_DIR}/Arcball.cpp
    ${MESHGEODESYAPP_SOURCE_DIR}/Baseball.cpp
    ${MESHGEODESYAPP_SOURCE_DIR}/main.cpp
)

set(MESHGEODESYAPP_HEADERS
    ${MESHGEODESYAPP_INCLUDE_DIR}/MxGUI.hpp
    ${MESHGEODESYAPP_INCLUDE_DIR}/MeshGUI.hpp
    ${MESHGEODESYAPP_INCLUDE_DIR}/Arcball.hpp
    ${MESHGEODESYAPP_INCLUDE_DIR}/Baseball.hpp
)

add_executable(MeshGeodesyApp ${MESHGEODESYAPP_SOURCES} ${MMESHGEODESYAPP_HEADERS})

target_include_directories(MeshGeodesyApp PRIVATE ${MESHGEODESYAPP_INCLUDE_DIR})

target_link_libraries(MeshGeodesyApp MeshGeodesyLib
    ${FLTK_LIBRARIES}
    ${OPENGL_LIBRARIES} 
    ${XFT_LIBRARY}
    ${FONTCONFIG_LIBRARY}
    ${XRENDER_LIBRARY}
    ${XFIXES_LIBRARY}
    ${XCURSOR_LIBRARY}
    ${XINERAMA_LIBRARY}
)
